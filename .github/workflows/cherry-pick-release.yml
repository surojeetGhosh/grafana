name: Cherry-pick to Release Branch

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: "The PR number to cherry-pick"
        required: true
        type: string
      release_branch:
        description: "The release branch to cherry-pick into"
        required: true
        type: string

jobs:
  cherry-pick:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Set up Git
      - name: Set up Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      # Check if the PR is merged and get the merge commit
      - name: Check PR Merge Status
        id: pr_check
        run: |
          PR_DATA=$(gh pr view ${{ inputs.pr_number }} --json state,mergeCommit --jq "{state: .state, commit: .mergeCommit.oid}")
          echo "$PR_DATA" > pr_status.json

          STATUS=$(jq -r '.state' pr_status.json)
          MERGE_COMMIT=$(jq -r '.commit' pr_status.json)

          if [ "$STATUS" != "merged" ]; then
            echo "The PR #${{ inputs.pr_number }} is not merged. Exiting."
            exit 1
          fi

          echo "merge_commit=$MERGE_COMMIT" >> $GITHUB_ENV

      # Create a new branch from the release branch
      - name: Create Branch
        run: |
          RELEASE_BRANCH=${{ inputs.release_branch }}
          git fetch origin $RELEASE_BRANCH
          git checkout -b cherry-pick-"$RELEASE_BRANCH"-"${{ inputs.pr_number }}" origin/$RELEASE_BRANCH

      # Cherry-pick the specified commit, it should fail
      - name: Cherry-pick Commit
        run: |
          git cherry-pick ${{ env.merge_commit }}
          

      # Push the new branch
      - name: Push Branch
        run: |
          RELEASE_BRANCH=${{ inputs.release_branch }}
          git push origin cherry-pick-"$RELEASE_BRANCH"-"${{ inputs.pr_number }}"

      # Create a PR to the release branch
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_TOKEN }}
          commit-message: "Cherry-picked changes from PR #${{ inputs.pr_number }} merged on master"
          branch: cherry-pick-${{ inputs.release_branch }}-"${{ inputs.pr_number }}"
          base: ${{ inputs.release_branch }}
          title: "Cherry-pick PR #${{ inputs.pr_number }} to ${{ inputs.release_branch }}"
          body: |
            Cherry-picked commit from PR #${{ inputs.pr_number }}:
            - Commit: ${{ env.merge_commit }}
      
